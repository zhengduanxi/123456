# 定义顶级模块的名称
TOPNAME = top

# Verilator的可执行文件名称
VERILATOR = verilator

# 定义编译器标志
VERILATOR_CFLAGS += -MMD --build -vpi -trace -cc  \
				-O3 --x-assign fast --x-initial fast --noassert

# 添加gdb调试编译器标志
VERILATOR_CFLAGS += --gdbbt
CXXFLAGS += -DVL_DEBUG=1 -Og -ggdb3

# 添加对 readline 库的编译器和链接器标志
CXXFLAGS += $(shell pkg-config --cflags readline)
LDFLAGS += $(shell pkg-config --libs readline)

#链接 LLVM 库
CXXFLAGS += $(shell llvm-config --cxxflags) -fPIE -U__STDC_FORMAT_MACROS
LIBS = $(shell llvm-config --libs)
LDFLAGS += $(LIBS)

#CFLAGS_BUILD += -fsanitize=address
#CFLAGS  += $(CFLAGS_BUILD)
#LDFLAGS += $(CFLAGS_BUILD)
#export LD_PRELOAD=/usr/lib/gcc/x86_64-linux-gnu/11/libasan.so

DIFF_REF_SO = $(NEMU_HOME)/build/riscv32-nemu-interpreter-so
ARGS_DIFF = --diff=$(DIFF_REF_SO)
override ARGS += $(ARGS_DIFF)
LDFLAGS += -ldl

# 定义构建目录
BUILD_DIR = ./build

PRJ = playground

MILL = mill --mill-version 0.11.8

test:
	$(MILL) -i $(PRJ).test

verilog:
	$(call git_commit, "generate verilog")
	mkdir -p $(BUILD_DIR)
	$(MILL) -i $(PRJ).runMain RV32IMain --target-dir $(BUILD_DIR)

help:
	$(MILL) -i $(PRJ).runMain Elaborate --help

reformat:
	$(MILL) -i __.reformat

checkformat:
	$(MILL) -i __.checkFormat

bsp:
	$(MILL) -i mill.bsp.BSP/install

idea:
	$(MILL) -i mill.idea.GenIdea/idea

sim:
	$(call git_commit, "sim RTL") # DO NOT REMOVE THIS LINE!!!
	@echo "Write this Makefile by yourself."

# 定义对象文件目录
OBJ_DIR = $(BUILD_DIR)/obj_dir

# 定义最终可执行文件的名称
BIN = $(BUILD_DIR)/$(TOPNAME)

# 默认目标
default: $(BIN)

# 创建构建目录
$(shell mkdir -p $(BUILD_DIR))

# 定义Verilog源文件的搜索路径
VSRCS = $(shell find $(abspath ./generated) -name "*.v" -or -name "*.sv")

# 定义C/C++源文件的搜索路径
CSRCS = $(shell find $(abspath ./csrc) -name "*.c" -or -name "*.cc" -or -name "*.cpp")

# Include variables and rules generated by menuconfig
-include $(NEMU_HOME)/include/config/auto.conf
-include $(NEMU_HOME)/include/config/auto.conf.cmd

# Extract variabls from menuconfig
GUEST_ISA ?= $(call remove_quote,$(CONFIG_ISA))
ENGINE ?= $(call remove_quote,$(CONFIG_ENGINE))
NAME    = $(GUEST_ISA)-nemu-$(ENGINE)

# Include rules for menuconfig
include $(NPC_HOME)/scripts/config.mk

# Include all filelist.mk to merge file lists
FILELIST_MK = $(shell find -L ./csrc -name "filelist.mk")
include $(FILELIST_MK)


$(BIN): $(VSRCS) $(CSRCS)
	@rm -rf $(OBJ_DIR)
	$(VERILATOR) $(VERILATOR_CFLAGS) \
		--top-module $(TOPNAME) $^ \
		$(addprefix -CFLAGS , $(CXXFLAGS)) $(addprefix -LDFLAGS , $(LDFLAGS)) \
		--Mdir $(OBJ_DIR) --exe -o $(abspath $(BIN))

IMG ?=
NPC_EXEC := $(BIN) $(ARGS) $(IMG)

all:default
	@echo "Write this Makefile by your self."

run:$(BIN) $(DIFF_REF_SO)
	$(call git_commit, "run NPC") # DO NOT REMOVE THIS LINE!!!
	$(NPC_EXEC)
	@echo $(NPC_EXEC)
	@echo "Write this Makefile by your self."

gdb:$(BIN) $(DIFF_REF_SO)
	$(call git_commit, "gdb NPC") # DO NOT REMOVE THIS LINE!!!
	gdb -s $(BIN) --args $(NPC_EXEC)

# 清理构建目录
clean:
	rm -rf $(BUILD_DIR) waveform.vcd 

# 定义伪目标
.PHONY: test verilog help reformat checkformat default all clean run

include ../Makefile
